# ==============================================================================
# DOCKER TOOLS
# Assembly of recurring docker cmd-line tasks.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# ==============================================================================

function show_help () {
cat << EOF
rme - Remove exited containers from history.
rmu - Remove untagged images from database.
up  - Initialize an existing docker setup
EOF
    exit 1
}

# parse cmd line
while getopts "h" opt; do
    case "$opt" in
        h) show_help ;;
        *) echo "Illegal argument."; exit 1;;
    esac
done

# check if there is an remaining argument and set it as job type
shift $(expr $OPTIND - 1 )
[ $# -gt 0 ] && JOB="$1"

function rm-exited () {
    echo "-- Removing exited containers from history."
    docker ps -a | grep "Exited (" | awk '{ print $1 }' | xargs -r docker rm
    echo "-- Done."
    docker ps -a
}

function rm-untagged () {
    echo "-- Removing untagged images from image database."
    docker images | grep -e "^<none>[ ]\{1,\}<none>" | awk '{print $3}' |\
    xargs -r docker rmi -f
    echo "-- Done."
    docker images
}

function init () {
    echo "-- Initializing docker setup."
    shift
    setups=$( find "$( dirname "$( readlink -f "$0" )" )" \
        -type f -iname "Dockerfile" | xargs dirname |\
    sed -e "s/^\.\///" | tr "\n" " " )
    for setup in $setups; do
        bn=$( basename $setup )
        echo "   + '$bn'"
        if [ "$bn" == "$1" ]; then
            shift
            ${setup}/start $@
            exit 0
        fi
    done
    echo "Please select an existing setup."
    exit 1
}

# test if docker is available
docker ps
[ $? != 0 ] && {
    cat << EOF

---- Docker invocation failed!
On 'Cannot connect to daemon' errors, consider adding the
current user to the 'docker' group, esp. if docker is installed.
sudo usermod -aG docker $USER

EOF
    exit 1
}

if [ "$JOB" == "rme" ]; then
    rm-exited
    elif [ "$JOB" == "rmu" ]; then
    rm-untagged
    elif [ "$JOB" == "up" ]; then
    init $@
else
    show_help
fi
